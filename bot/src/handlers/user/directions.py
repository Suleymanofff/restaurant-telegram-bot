from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardButton, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from fluent.runtime import FluentLocalization
import logging

from src.utils.config import settings
from src.utils.logger import get_logger

router = Router()
logger = get_logger(__name__)

@router.message(F.text == "üó∫Ô∏è –ü—Ä–æ–ª–æ–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç")
async def get_directions_handler(message: Message, l10n: FluentLocalization, db_manager=None):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞"""
    try:
        user = message.from_user
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        if db_manager:
            await db_manager.add_user_action(
                user_id=user.id,
                action_type='get_directions_click'
            )

        restaurant_address = settings.RESTAURANT_ADDRESS
        latitude = settings.RESTAURANT_LATITUDE
        longitude = settings.RESTAURANT_LONGITUDE

        # –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        builder = InlineKeyboardBuilder()
        
        # –°—Å—ã–ª–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞—Ä—Ç
        google_maps_url = f"https://www.google.com/maps/dir/?api=1&destination={latitude},{longitude}"
        yandex_maps_url = f"https://yandex.ru/maps/?rtext=~{latitude},{longitude}"
        apple_maps_url = f"http://maps.apple.com/?daddr={latitude},{longitude}"
        waze_url = f"https://waze.com/ul?ll={latitude},{longitude}&navigate=yes"
        
        builder.button(text="üó∫Ô∏è Google Maps", url=google_maps_url)
        builder.button(text="üìç –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã", url=yandex_maps_url)
        builder.button(text="üçé Apple Maps", url=apple_maps_url)
        builder.button(text="üöó Waze", url=waze_url)
        # builder.button(text="üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å", callback_data="call_restaurant")
        builder.adjust(1)

        # –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ
        text = (
            f"üçΩÔ∏è <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω!</b>\n\n"
            f"üìç <b>–ê–¥—Ä–µ—Å:</b>\n{restaurant_address}\n\n"
            f"üïí <b>–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:</b>\n"
            f"‚Ä¢ –ü–Ω-–ß—Ç: 10:00 - 23:00\n"
            f"‚Ä¢ –ü—Ç-–°–±: 10:00 - 00:00\n"
            f"‚Ä¢ –í—Å: 10:00 - 22:00\n\n"
            f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> +7 (495) 123-45-67\n\n"
            f"üöó <b>–ü–∞—Ä–∫–æ–≤–∫–∞:</b> –ï—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞\n"
            f"‚ôø <b>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:</b> –ü–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –º–∞–ª–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –≥–æ—Å—Ç–µ–π\n\n"
            f"<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞:</b>"
        )

        await message.answer(text, parse_mode="HTML", reply_markup=builder.as_markup())
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–∫–∞—Ü–∏—é
        try:
            await message.answer_location(
                latitude=latitude,
                longitude=longitude,
                title="–ù–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω",
                address=restaurant_address
            )
        except Exception as location_error:
            logger.warning(f"‚ö†Ô∏è Could not send location: {location_error}")

        logger.info(f"üó∫Ô∏è Detailed directions requested by user {user.id}")

    except Exception as e:
        logger.error(f"‚ùå Error in get_directions_handler: {e}")
        await message.answer(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É."
        )

@router.callback_query(F.data == "call_restaurant")
async def call_restaurant_handler(callback: CallbackQuery, l10n: FluentLocalization):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–∑–≤–æ–Ω–∏—Ç—å'"""
    try:
        await callback.answer("üìû –¢–µ–ª–µ—Ñ–æ–Ω —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞: +7 (495) 123-45-67", show_alert=True)
    except Exception as e:
        logger.error(f"‚ùå Error in call_restaurant_handler: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")